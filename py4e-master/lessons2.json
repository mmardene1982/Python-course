{
"title": "Python for Everybody (PY4E)",
"description" : "Hello and welcome to my site where you learn Python even if you have no programming background.",
"count": true,
"badges": [
    {
        "title" : "Enrolled in Python for Everybody (PY4E)",
        "image" : "00_hello_world.png",
        "threshold" : "0.0",
        "assignments" : [
        ]
    },
    {
        "title" : "Introductory Python - Getting Started",
        "threshold" : "0.8",
        "image" : "badge_01_code.png",
        "assignments" : [
            "install",
            "python2auto_01_hello",
            "python2auto_02_03",
            "python2auto_03_03",
            "python2auto_04_06",
            "python2auto_05_02"
        ]
    },
    {
        "title" : "Python Data Structures",
        "threshold" : "1.0",
        "image" : "badge_02_data.png",
        "assignments" : [
            "python2auto_06_05",
            "python2auto_07_02",
            "python2auto_08_04",
            "python2auto_08_05",
            "python2auto_09_04",
            "python2auto_10_02"
        ]
    },
    {
        "title" : "Accessing Web and Network Data With Python",
        "threshold" : "0.8",
        "image" : "badge_03_network.png",
        "assignments" : [
            "pythondata_01_regex",
            "pythondata_02_rrc",
            "pythondata_03_html",
            "pythondata_04_links",
            "pythondata_05_xml",
            "pythondata_06_json",
            "pythondata_07_geo"
        ]
    },
    {
        "title" : "Using Databases With Python",
        "threshold" : "1.0",
        "image" : "badge_04_database.png",
        "assignments" : [
            "pythonsql_01_single",
            "pythonsql_02_email",
            "pythonsql_03_tracks",
            "pythonsql_04_many"
        ]
    }
],
"other_courses": [
    {
        "title" : "Python for Everybody Specialization (Coursera)",
        "href" : "https://www.coursera.org/specializations/python"
    }
],
"modules": [
{ 
    "title": "Installing Python",
    "anchor": "install",
    "icon" : "fa-bicycle",
    "description": "The first task is to work through the installation steps including installing Python and text editor.",
    "assignment" : "install.php",
    "references" : [
        {
            "title" : "Setting up the PythonLearn Environment in Microsoft Windows",
            "href" : "software-win.php"
        },
        {
            "title" : "Setting up the PythonLearn Environment on a Macintosh",
            "href" : "software-mac.php"
        },
        {
            "title" : "Setting up the PythonLearn Environment on a Respberry Pi",
            "href" : "software-mac.php"
        }
    ],
    "lti" : {
        "title": "Peer Graded: Installation Screen Shots",
        "launch" : "mod/peer-grade/index.php",
        "resource_link_id": "install",
        "custom" : [
            {
                "key": "config",
                "json": 

{
  "title":"Peer Review: Installing and Running Python Screen Shots",
  "description":"Install Python and a programming text editor and write a program that prints one line other than 'hello world', then take two screen shots and upload them below. You should use the command line to execute the Python program you wrote in the text editor. Please do *not* use the IDLE Python Shell, the Python Interpreter (>>>), or a shortcut in your text editor to run the code. Later in the class when we start reading files, we will need to be able to run Python programs from particular directories. See the videos for details.",
  "grading":"This is a relatively simple assignment. The goal is to simply show that each student has Python installed on their desktop or laptop and can take screen shots. Please make your comments to help the student that you are reviewing.",
  "assignment":"http://www.py4e.com/install",
  "parts":[
    {
      "title":"Image of the program being edited in a text editor",
      "type":"image"
    },
    {
      "title":"Image of the program being executed in the command line or terminal",
      "type":"image"
    }
  ],
  "totalpoints":10,
  "minassess":2,
  "assesspoints":2,
  "instructorpoints":0,
  "maxassess":8,
  "peerpoints":6,
  "flag":true,
  "rating":0,
  "gallery":"off",
  "resubmit":"off",
  "notepublic":"false",
  "galleryformat":"card"
}

            }
        ]
    }
},
{
    "title": "Why Program?",
    "anchor": "intro",
    "icon" : "fa-hand-o-right",
    "description": "We learn why one might want to learn to program, and look at the basic issues with learning to program.",
    "slides": "lectures3/Pythonlearn-01-Intro.pptx",
    "chapters" : "1",
    "videos" : [
        {
            "title" : "Why Program?",
            "youtube" : "G721cooZXgs"
        }
    ],
    "lti" : {
        "title" : "Autograder: Write Hello World",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_01_hello",
        "custom" : [
            {
                "key": "exercise",
                "value": "hello"
            }
        ]
    }
},
{
    "title": "Variables, expressions, and statements",
    "anchor": "memory",
    "icon" : "fa-database",
    "description": "We learn how to make variables and store data in those variables.",
    "slides": "lectures3/Pythonlearn-02-Expressions.pptx",
    "chapters" : "2",
    "videos" : [
        {
            "title" : "Variables, Expressions, and Statements",
            "youtube" : "IXXHH6ztsSA"
        },
        {
            "title" : "Worked Exercise: 2.2",
            "youtube" : "e5ghuPdTdAM"
        },
        {
            "title" : "Worked Exercise: 2.3",
            "youtube" : "okYsmRNeWzI"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 2.3",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_02_03",
        "custom" : [
            {
                "key": "exercise",
                "value": "2.3"
            }
        ]
    }
},
{
    "title": "Conditional Execution",
    "anchor": "logic",
    "icon" : "fa-diamond",
    "description": "We look at how Python executes some statements and skips others.",
    "slides": "lectures3/Pythonlearn-03-Conditional.pptx",
    "chapters" : "3",
    "videos" : [
        {
            "title" : "Conditional Execution",
            "youtube" : "VXyRfgnzL2o"
        },
        {
            "title" : "Worked Exercise 3.1",
            "youtube" : "sBdvzOpFMjU"
        },
        {
            "title" : "Worked Exercise 3.2",
            "youtube" : "D6aVKVCWyfQ"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 3.3",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_03_03",
        "custom" : [
            {
                "key": "exercise",
                "value": "3.3"
            }
        ]
    }
},
{
    "title": "Functions",
    "anchor": "functions",
    "icon" : "fa-files-o",
    "description": "Take a brief look at how Python implements the 'store and use later' programming pattern.",
    "slides": "lectures3/Pythonlearn-04-Functions.pptx",
    "chapters" : "4",
    "videos" : [
        {
            "title" : "Functions",
            "youtube" : "Wdi6lhcrtBU"
        },
        {
            "title" : "Worked Exercise 4.6",
            "youtube" : "2y1zUVv1oRg"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 4.6",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_04_06",
        "custom" : [
            {
                "key": "exercise",
                "value": "4.6"
            }
        ]
    }
},
{
    "title": "Loops and Iterations",
    "anchor": "loops",
    "icon" : "fa-gears",
    "description": "We look at how Python repeats statements using looping structures.",
    "slides": "lectures3/Pythonlearn-05-Iterations.ppt",
    "chapters" : "5",
    "videos" : [
        {
            "title" : "Loops and Iteration",
            "youtube" : "6KgArgGi6Mk"
        },
        {
            "title" : "Worked Exercise 5.1",
            "youtube" : "sgKSR5GWD7s"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 5.2",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_05_02",
        "custom" : [
            {
                "key": "exercise",
                "value": "5.2"
            }
        ]
    }
},
{
    "title": "Strings",
    "anchor": "strings",
    "icon" : "fa-file-text-o",
    "description": "We look at how Python stores and manipulates textual data using string variables and functions.",
    "slides": "lectures3/Pythonlearn-06-Strings.pptx",
    "chapters" : "6",
    "videos" : [
        {
            "title" : "Strings",
            "youtube" : "L2IUSArpG98"
        },
        {
            "title" : "Worked Exercise 6.7",
            "youtube" : "eQfeb44QrR4"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 6.5",
        "resource_link_id": "python2auto_06_05",
        "launch" : "tools/pythonauto/index.php",
        "custom" : [
            {
                "key": "exercise",
                "value": "6.5"
            }
        ]
    }
},
{
    "title": "Files",
    "anchor": "files",
    "icon" : "fa-database",
    "description": "We learn how to open data files on your computer and read through the files using Python.",
    "slides": "lectures3/Pythonlearn-07-Files.pptx",
    "chapters" : "7",
    "videos" : [
        {
            "title" : "Reading Files",
            "youtube" : "O0wE2M8-ois"
        },
        {
            "title" : "Worked Exercise 7.3",
            "youtube" : "7Is24nPkMcA"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 7.2",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_07_02",
        "custom" : [
            {
                "key": "exercise",
                "value": "7.2"
            }
        ]
    }
},
{
    "title": "Lists",
    "anchor": "lists",
    "icon" : "fa-list-ol",
    "description": "We look at Python's simplest data structure: the list.  Lists can store more than one item in a variable.",
    "slides": "lectures3/Pythonlearn-08-Lists.pptx",
    "chapters" : "8",
    "videos" : [
        {
            "title" : "Lists",
            "youtube" : "nO8eU3uts0o"
        },
        {
            "title" : "Worked Exercise - Lists",
            "youtube" : "styw5-JOzrc"
        }
    ],
    "lti" : [
    {
        "title" : "Autograder: Exercise 8.4",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_08_04",
        "custom" : [
            {
                "key": "exercise",
                "value": "8.4"
            }
        ]
    },
    {
        "title" : "Autograder: Exercise 8.5",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_08_05",
        "custom" : [
            {
                "key": "exercise",
                "value": "8.5"
            }
        ]
    }
    ]
},
{
    "title": "Dictionaries",
    "anchor": "dictionary",
    "icon" : "fa-key",
    "description": "The dictionary data structures allows us to store multiple values in an object and look up the values by their key.",
    "slides": "lectures3/Pythonlearn-09-Dictionaries.pptx",
    "chapters" : "9",
    "videos" : [
        {
            "title" : "Dictionaries",
            "youtube" : "FS-WZWUlPlM"
        },
        {
            "title" : "Worked Exercise - Dictionaries",
            "youtube" : "3cwXN5_3K6Q"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 9.4",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_09_04",
        "custom" : [
            {
                "key": "exercise",
                "value": "9.4"
            }
        ]
    }
},
{
    "title": "Tuples",
    "anchor": "tuples",
    "icon" : "fa-inbox",
    "description": "The tuple is a Python data structure that is like a simple and efficient list.",
    "slides": "lectures3/Pythonlearn-10-Tuples.pptx",
    "chapters" : "10",
    "videos" : [
        {
            "title" : "Tuples",
            "youtube" : "odIMpHInDbA"
        },
        {
            "title" : "Worked Exercise - Tuples",
            "youtube" : "UwkYl9-P4R4"
        }
    ],
    "lti" : {
        "title" : "Autograder: Exercise 10.2",
        "launch" : "tools/pythonauto/index.php",
        "resource_link_id": "python2auto_10_02",
        "custom" : [
            {
                "key": "exercise",
                "value": "10.2"
            }
        ]
    }
},
{
    "title": "Regular Expressions",
    "chapters" : "11",
    "anchor": "regex",
    "icon" : "fa-magic",
    "description": "Regular Expressions allow us to search for patterns in strings and extract data from strings using the regular expression programming language.",
    "slides": "lectures3/Pythonlearn-11-Regex.pptx",
    "videos" : [
        {
            "title" : "Regular Expressions",
            "youtube" : "UR6a_wZ8ido"
        }
    ],
    "lti" : {
        "title" : "Autograder: Regular Expressions",
        "launch" : "tools/python-data/index.php",
        "resource_link_id": "pythondata_01_regex",
        "custom" : [
            {
                "key": "exercise",
                "value": "regex_sum.php"
            }
        ]
    }
},
{
    "title": "Network Programming",
    "chapters" : 12,
    "anchor": "network",
    "icon" : "fa-cloud",
    "description": "We take a quick look at how data moves across the network using the HyperText Transport Protocol (HTTP) and how we write programs to read data scross the network.",
    "slides": "lectures3/Pythonlearn-12-HTTP.pptx",
    "videos" : [
        {
            "title" : "Network Programming",
            "youtube" : "Zr8BQiPNaFI"
        }
    ],
    "lti" : [
    {
        "title" : "Autograder: Request-Response Cycle",
        "launch" : "tools/python-data/index.php",
        "resource_link_id": "pythondata_02_rrc",
        "custom" : [
            {
                "key": "exercise",
                "value": "http_headers.php"
            }
        ]
    },
    {
        "title" : "Autograder: Scraping HTML Data with BeautifulSoup",
        "launch" : "tools/python-data/index.php",
        "resource_link_id": "pythondata_03_html",
        "custom" : [
            {
                "key": "exercise",
                "value": "comment_html.php"
            }
        ]
    },
    {
        "title" : "Autograder: Following Links with BeautifulSoup",
        "launch" : "tools/python-data/index.php",
        "resource_link_id": "pythondata_04_links",
        "custom" : [
            {
                "key": "exercise",
                "value": "knows.php"
            }
        ]
    }
    ]
},
{
    "title": "Using Web Services",
    "chapters": "13",
    "anchor": "servces",
    "icon" : "fa-briefcase",
    "description": "Web services allow a program to access data available on a different server.",
    "slides": "lectures3/Pythonlearn-13-WebServices.pptx",
    "videos" : [
        {
            "title" : "Web Services Part 1",
            "youtube" : "6cwi1NcL0Zc"
        },
        {
            "title" : "Discovering JSON - Douglas Crockford",
            "youtube" : "kc8BAR7SHJI"
        },
        {
            "title" : "Web Services Part 2",
            "youtube" : "4Rib_ybry2Y"
        },
        {
            "title" : "The JISC e-Framework",
            "youtube" : "mj-kCFzF0ME"
        },
        {
            "title" : "Web Services Part 3",
            "youtube" : "_tpyqAlCgoM"
        }
    ],
    "lti" : [
    {
        "title" : "Autograder: Extracting Data from XML",
        "resource_link_id": "pythondata_05_xml",
        "launch" : "tools/python-data/index.php",
        "custom" : [
            {
                "key": "exercise",
                "value": "comment_xml.php"
            }
        ]
    },
    {
        "title" : "Autograder: Extract Data from JSON",
        "launch" : "tools/python-data/index.php",
        "resource_link_id": "pythondata_06_json",
        "custom" : [
            {
                "key": "exercise",
                "value": "comment_json.php"
            }
        ]
    },
    {
        "title" : "Autograder: Using the GeoJSON API",
        "launch" : "tools/python-data/index.php",
        "resource_link_id": "pythondata_07_geo",
        "custom" : [
            {
                "key": "exercise",
                "value": "geo_json.php"
            }
        ]
    }
    ]
},
{
    "title": "Object-Oriented Programming",
    "chapters" : "14",
    "anchor": "Objects",
    "icon" : "fa-cubes",
    "description": "We have a quick look at how Python supports the Object-Oriented programming pattern.",
    "slides": "lectures3/Pythonlearn-14-Objects.pptx"
},
{
    "title": "Databases",
    "chapter" : "15",
    "anchor": "json",
    "icon" : "fa-database",
    "description": "Databases give us very fast random access to large amounts of data.",
    "slides": "lectures3/Pythonlearn-15-Databases.pptx",
    "videos" : [
        {
            "title" : "Databases - Part 1",
            "youtube" : "3RMPveOMd0k"
        },
        {
            "title" : "Databases - Single Table SQL - Part 2",
            "youtube" : "yRJE-nk20sM"
        },
        {
            "title" : "Worked Example: Twspider.py",
            "youtube" : "wQNjza1gb_g"
        },
        {
            "title" : "Databases - Complex Models - Part 3",
            "youtube" : "rHjRpYUl5eg"
        },
        {
            "title" : "Databases - Part 4",
            "youtube" : "PgE--P-ZWvU"
        },
        {
            "title" : "Databases - Foreign Keys - Part 5",
            "youtube" : "GfuH_8uH16k"
        },
        {
            "title" : "Databases - JOIN - Part 6",
            "youtube" : "zMOSVrb82iU"
        },
        {
            "title" : "Worked Example: Tracks.py",
            "youtube" : "UGe7X_L-lHc"
        },
        {
            "title" : "Databases - Many-to-Many - Part 7",
            "youtube" : "uq_Wf4nuXqE"
        },
        {
            "title" : "Worked Example: Twfriends.py",
            "youtube" : "A_TpMJkSOcI"
        }
    ],
    "references" : [
        {
            "title" : "Python for Everybody Database Handout",
            "href" : "lectures3/Pythonlearn-15-Database-Handout.txt"
        }
    ],
    "lti" : [
    {
        "title" : "Autograder: Single Table SQL",
        "launch" : "tools/sql-intro/index.php",
        "resource_link_id": "pythonsql_01_single",
        "custom" : [
            {
                "key": "exercise",
                "value": "single_lite.php"
            }
        ]
    },
    {
        "title" : "Autograder: Counting Email in a Database",
        "launch" : "tools/sql-intro/index.php",
        "resource_link_id": "pythonsql_02_email",
        "custom" : [
            {
                "key": "exercise",
                "value": "count_lite.php"
            }
        ]
    },
    {
        "title" : "Autograder: Multi-Table Database - Tracks",
        "launch" : "tools/sql-intro/index.php",
        "resource_link_id": "pythonsql_03_tracks",
        "custom" : [
            {
                "key": "exercise",
                "value": "many_one_lite.php"
            }
        ]
    },
    {
        "title" : "Autograder: Many Students in Many Courses",
        "launch" : "tools/sql-intro/index.php",
        "resource_link_id": "pythonsql_04_many",
        "custom" : [
            {
                "key": "exercise",
                "value": "many_many_lite.php"
            }
        ]
    }
    ]
},
{
    "title": "Data Visualization",
    "chapters" : "16",
    "anchor": "dataviz",
    "icon" : "fa-bar-chart-o",
    "description": "In this section, we learn to scrape data from the network, store the data in a database and then read the data from the database to produce an in-browser visualization of the data.",
    "slides": "lectures3/Pythonlearn-16-Data-Viz.pptx"
}

]
}
